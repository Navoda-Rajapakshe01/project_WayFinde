// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250417013905_User")]
    partial class User : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FullName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Email = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Age = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Users");
        }

        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.User", b =>
            {
                b.Property<int>("Id")
                   .ValueGeneratedOnAdd()
                   .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("Age")
                    .HasColumnType("int");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FullName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("Backend.Models.Vehicle", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Brand")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Disription")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FuelType")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsAvailable")
                    .HasColumnType("bit");

                b.Property<string>("Loation")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Model")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("NumberOfPassangers")
                    .HasColumnType("int");

                b.Property<string>("OwnerName")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Ownerity")
                    .HasColumnType("nvarchar(max)");

                b.Property<decimal>("PricePerDay")
                    .HasPrecision(18, 2)
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("TransmissionType")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Type")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Vehicles");
            });

            modelBuilder.Entity("Backend.Models.VehicleImage", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("ImageUrl")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("VehicleId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("VehicleId");

                b.ToTable("VehicleImages");
            });

            modelBuilder.Entity("Backend.Models.VehicleReservation", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("BillingName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("City")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("DriversLicenseNumber")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FullName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("ReservationDate")
                    .HasColumnType("datetime2");

                b.Property<string>("State")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("StreetAddress")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("VehicleId")
                    .HasColumnType("int");

                b.Property<string>("ZipCode")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("VehicleId");

                b.ToTable("VehicleReservations");
            });

            modelBuilder.Entity("Backend.Models.VehicleReview", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Comment")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("DatePosted")
                    .HasColumnType("datetime2");

                b.Property<int>("Rating")
                    .HasColumnType("int");

                b.Property<string>("ReviewerName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("VehicleId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("VehicleId");

                b.ToTable("VehicleReviews");
            });

            modelBuilder.Entity("Backend.Models.VehicleImage", b =>
            {
                b.HasOne("Backend.Models.Vehicle", "Vehicle")
                    .WithMany("Images")
                    .HasForeignKey("VehicleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Vehicle");
            });

            modelBuilder.Entity("Backend.Models.VehicleReservation", b =>
            {
                b.HasOne("Backend.Models.Vehicle", "Vehicle")
                    .WithMany()
                    .HasForeignKey("VehicleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Vehicle");
            });

            modelBuilder.Entity("Backend.Models.VehicleReview", b =>
            {
                b.HasOne("Backend.Models.Vehicle", "Vehicle")
                    .WithMany("Reviews")
                    .HasForeignKey("VehicleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Vehicle");
            });

            modelBuilder.Entity("Backend.Models.Vehicle", b =>
            {
                b.Navigation("Images");

                b.Navigation("Reviews");
            });
#pragma warning restore 612, 618
        }
    }
}